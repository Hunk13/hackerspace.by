upstream hackerspace {
    server unix:///home/user/hackerspace.sock fail_timeout=0;
}

server {

	root /home/user/current/public;

        index index.html index.htm index.nginx-debian.html;

        server_name hackerspace.by www.hackerspace.by mhs.by www.mhs.by;

	try_files $uri/index.html $uri @hackerspace;

	location @hackerspace {
            proxy_pass http://hackerspace;
	    proxy_set_header  Host $host;
	    proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header  X-Forwarded-Proto $scheme;
	    proxy_set_header  X-Forwarded-Ssl on; # Optional
	    proxy_set_header  X-Forwarded-Port $server_port;
	    proxy_set_header  X-Forwarded-Host $host;

	    proxy_read_timeout 300;
	}

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/hackerspace.by/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/hackerspace.by/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    error_page 500 502 503 504 /500.html;




}
server {
    if ($host = www.hackerspace.by) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = hackerspace.by) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = www.mhs.by) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = mhs.by) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

        listen 80;
        listen [::]:80;

        server_name hackerspace.by www.hackerspace.by stage.hackerspace.by;
    return 404; # managed by Certbot

}
